python 学好 python 非常 重要 ， python 非常简单 ， 易用 但 用途 广 Python 在 设计 上 坚持 了 清晰 划一 的 风格 ， 这 使得 Python 成为 一门 易读 、 易 维护 ， 并且 被 大量 用户 所 欢迎 的 、 用途 广泛 的 语言 。 设计者 开发 时 总 的 指导思想 是 ， 对于 一个 特定 的 问题 ， 只要 有 一种 最好 的 方法 来 解决 就 好 了 。 这 在 由 TimPeters 写 的 Python 格言 里面 表述 为 ： 这 正好 和 Perl 语言 （ 另 一种 功能 类似 的 高级 动态 语言 ） 的 中心思想 TMTOWTDI 完全 相反 。 Python 的 作者 有意 的 设计 限制性 很强 的 语法 ， 使得 不好 的 编程 习惯 （ 例如 if 语句 的 下 一行 不向 右 缩进 ） 都 不能 通过 编译 。 其中 很 重要 的 一项 就是 Python 的 缩进 规则 。 一个 和 其他 大多数 语言 （ 如 C ） 的 区别 就是 ， 一个 模块 的 界限 ， 完全 是 由 每行 的 首 字符 在 这 一行 的 位置 来 决定 的 （ 而 C语言 是 用 一对 花 括号 { } 来 明确 的 定出 模块 的 边界 的 ， 与 字符 的 位置 毫无关系 ） 。 这 一点 曾经 引起 过 争议 。 因为 自从 C 这类 的 语言 诞生 后 ， 语言 的 语法 含义 与 字符 的 排列 方式 分离 开来 ， 曾经 被 认为 是 一种 程序语言 的 进步 。 不过 不可否认 的 是 ， 通过 强制 程序员 们 缩进 （ 包括 if ， for 和 函数 定义 等 所有 需要 使用 模块 的 地方 ） ， Python 确实 使得 程序 更加 清晰 和 美观 。

C++ C++ 是 C语言 的 继承 ， 它 既 可以 进行 C语言 的 过程 化 程序设计 20 世纪 70 年代 中期 ， BjarneStroustrup 在 剑桥大学 计算机 中心 工作 。 他 使用 过 Simula 和 ALGOL ， 接触 过 C 。 他 对 Simula 的 类 体系 感受 颇深 ， 对 ALGOL 的 结构 也 很 有 研究 ， 深知 运行 效率 的 意义 。 既 要 编程 简单 、 正确 可靠 ， 又 要 运行 高效 、 可移植 ， 是 BjarneStroustrup 的 初衷 。 以 C 为 背景 ， 以 Simula 思想 为 基础 ， 正好 符合 他 的 设想 。 1979 年 ， BjameSgoustrup 到 了 Bell 实验室 ， 开始 从事 将 C 改良 为 带类 的 的 工作 。 1983 年 该 语言 被 正式 命名 为 C++ 。 自从 C++ 被 发明 以来 ， 它 经历 了 3 次 主要 的 修订 ， 每 一次 修订 都 为 C++ 增加 了 新 的 特征 并作 了 一些 修改 。 第一次 修订 是 在 1985 年 ， 第二次 修订 是 在 1990 年 ， 而 第三次 修订 发生 在 c++ 的 标准化 过程 中 。 在 20 世纪 90 年代 早期 ， 人们 开始 为 C++ 建立 一个 标准 ， 并 成立 了 一个 ANSI 和 ISO （ IntemationalStandardsOrganization ） 国际标准化组织 的 联合 标准化 委员会 。 该 委员会 在 1994 年 1 月 25 曰 提出 了 第一个 标准化 草案 。 在 这个 草案 中 ， 委员会 在 保持 Stroustrup 最初 定义 的 所有 特征 的 同时 ， 还 增加 了 一些 新 的 特征 。

